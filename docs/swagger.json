{
    "swagger": "2.0",
    "info": {
        "description": "Auth-service: https://api.curanest.com.vn/auth/swagger/index.html.\nPatient-service: https://api.curanest.com.vn/patient/swagger/index.html.\nNurse-service: https://api.curanest.com.vn/nurse/swagger/index.html.\nAppointment-service: https://api.curanest.com.vn/appointment/swagger/index.html.\nNotification-service (not ready - expected): https://api.curanest.com.vn/notification/swagger/index.html.",
        "title": "Appointment Service",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/appointments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get appointment by filter option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "get appointment by filter option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "service ID (UUID)",
                        "name": "service-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "customized package ID (UUID)",
                        "name": "cuspackage-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "nursing ID (UUID)",
                        "name": "nursing-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "patient ID (UUID)",
                        "name": "patient-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "had a nurse not not",
                        "name": "had-nurse",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "appointment status",
                        "name": "appointment-status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "est date from (YYYY-MM-DD)",
                        "name": "est-date-from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "est date to (YYYY-MM-DD)",
                        "name": "est-date-to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "apply pagination not not",
                        "name": "apply-paging",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page index",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of items per page",
                        "name": "page-size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/dashboard": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get appointment by filter option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "get appointment by filter option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "is admin or staff",
                        "name": "is-admin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "date from (YYYY-MM-DD)",
                        "name": "date-from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "date to (YYYY-MM-DD)",
                        "name": "date-to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/nursing-available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get nursing available with service of appointment and date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "get nursing available",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service ID (UUID)",
                        "name": "service-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "est date (YYYY-MM-DDTHH:MM:SSZ, e.g., 2025-05-16T01:00:00Z)",
                        "name": "est-date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "est duration",
                        "name": "est-duration",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/nursing-timesheet": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get timesheet of nursing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "get timesheet of nursing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nursing ID (UUID)",
                        "name": "nursing-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "est date from (YYYY-MM-DD)",
                        "name": "est-date-from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "est date to (YYYY-MM-DD)",
                        "name": "est-date-to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/verify-nurses-dates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "verify nurses and dates are ready for new appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "verify nurses and dates",
                "parameters": [
                    {
                        "description": "nurses and dates mapping",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointmentqueries.CheckNursesAvailabilityRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/{appointment-id}/assign-nursing/{nursing-id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "assign nursing for appointment (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "assign nursing for appointment (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment ID (UUID)",
                        "name": "appointment-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nursing ID (UUID)",
                        "name": "nursing-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/{appointment-id}/status": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get appointment by filter option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "get appointment by filter option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment ID (UUID)",
                        "name": "appointment-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new status to update appointment's status",
                        "name": "new-status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/appointments/{appointment-id}/update-status-upcoming": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update status of appointment to upcoming",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "update status of appointment to upcoming",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment ID (UUID)",
                        "name": "appointment-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get categories by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "get categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "update category",
                "parameters": [
                    {
                        "description": "category update data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorycommands.UpdateCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "create new category",
                "parameters": [
                    {
                        "description": "category creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorycommands.CreateCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/categories/{category-id}/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list service by category-id (admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "get list service by category-id (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "services name",
                        "name": "service-name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "create new service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/servicecommands.CreateServiceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/categories/{category-id}/staff/remove": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "remove staff to category (admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "remove staff to category (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/categories/{category-id}/staff/{staff-id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add staff to category (admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "add staff to category (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "category-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "staff ID (UUID)",
                        "name": "staff-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/cuspackage": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find customized-package \u0026 customized-tasks with Id and est-date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized packages"
                ],
                "summary": "find customized-package \u0026 customized-tasks with Id and est-date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customized-package ID (UUID)",
                        "name": "cus-package-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "est date (YYYY-MM-DD)",
                        "name": "est-date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create customized service package (client)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized packages"
                ],
                "summary": "create customized service package (client)",
                "parameters": [
                    {
                        "description": "customized package and task creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cuspackagecommands.ReqCreatePackageTaskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/cuspackage/custask/{custask-id}/update-status-done": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change custask status to done",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized packages"
                ],
                "summary": "change custask status to done",
                "parameters": [
                    {
                        "type": "string",
                        "description": "custask ID (UUID)",
                        "name": "custask-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/cuspackage/{cus-package-id}/invoices": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find invoices with cus-package-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "find invoices with cus-package-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customized-package ID (UUID)",
                        "name": "cus-package-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/cuspackage/{cuspackage-id}/cancel": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create customized package (client)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized packages"
                ],
                "summary": "cancel customized package (client)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "custask ID (UUID)",
                        "name": "cuspackage-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/invoices/cancel-payment-url/{order-code}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "cannel paytment url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "cannel paytment url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order code (int)",
                        "name": "order-code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/invoices/patient": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get invoices with patient-ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "get invoices with patient-ids",
                "parameters": [
                    {
                        "description": "List of patient IDs (UUID)",
                        "name": "patientIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invoicequeries.RequestGetInvoicesByPatientIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/invoices/webhooks": {
            "post": {
                "description": "Process webhook notifications from PayOS to update invoice payment status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Handle PayOS webhook",
                "parameters": [
                    {
                        "description": "PayOS webhook data",
                        "name": "webhook_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invoicecommands.PayosWebhookData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{invoice-id}/create-payment-url": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new paytment url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "create new paytment url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice-id uuid",
                        "name": "invoice-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/medical-record/{appointment-id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get medical record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medical reports"
                ],
                "summary": "get medical record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment ID (UUID)",
                        "name": "appointment-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/medical-record/{medical-record-id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update medical record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medical reports"
                ],
                "summary": "update medical record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "medical-record ID (UUID)",
                        "name": "medical-record-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "customized package and task creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cuspackagecommands.UpdateMedicalRecordDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/services": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "create new service",
                "parameters": [
                    {
                        "description": "service creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/servicecommands.UpdateServiceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/services/group-by-category": {
            "get": {
                "description": "get list service with category (guest)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "get list service with category (guest)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "services name",
                        "name": "service-name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/services/{service-id}/svcpackage": {
            "get": {
                "description": "get list service-package by service-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "get list service-package by service-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service ID (UUID)",
                        "name": "service-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new service package (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "create new service package (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service ID (UUID)",
                        "name": "service-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service package creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/svcpackagecommands.ServicePackageDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/services/{service-id}/svcpackage/{svcpackage-id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update service package (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "update service package (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service ID (UUID)",
                        "name": "service-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service-package ID (UUID)",
                        "name": "svcpackage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service package update information",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/svcpackagecommands.UpdateServicePackageDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/staff/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list service of staff (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "get list service of staff (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "services name",
                        "name": "service-name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/svcpackage/svctask": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update service task order(staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "update service task order (staff)",
                "parameters": [
                    {
                        "description": "service task update information",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/svcpackagecommands.UpdateTaskOrderDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/svcpackage/{svcpackage-id}/svctask": {
            "get": {
                "description": "get list service-tasks by svcpackage-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "get list service-tasks by svcpackage-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service package ID (UUID)",
                        "name": "svcpackage-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new service task (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "create new service task (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "svcpackage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service task creation data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/svcpackagecommands.ServiceTaskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/svcpackage/{svcpackage-id}/svctask/{svctask-id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update service task (staff)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service packages"
                ],
                "summary": "update service task (staff)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category ID (UUID)",
                        "name": "svcpackage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service-task ID (UUID)",
                        "name": "svctask-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service task update information",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/svcpackagecommands.UpdateServiceTaskDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "ping server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "ping server",
                "responses": {
                    "200": {
                        "description": "message success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "appointmentqueries.CheckNursesAvailabilityRequestDTO": {
            "type": "object",
            "properties": {
                "nurses-dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appointmentqueries.NurseDateMapping"
                    }
                }
            }
        },
        "appointmentqueries.NurseDateMapping": {
            "type": "object",
            "properties": {
                "est-duration": {
                    "type": "integer"
                },
                "est-start-date": {
                    "type": "string"
                },
                "nurse-id": {
                    "type": "string"
                }
            }
        },
        "categorycommands.CreateCategoryDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "categorycommands.UpdateCategoryDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "staff-id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "cuspackagecommands.CreateCustomizedTaskDTO": {
            "type": "object",
            "required": [
                "svctask-id"
            ],
            "properties": {
                "client-note": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "integer"
                },
                "svctask-id": {
                    "type": "string"
                },
                "total-cost": {
                    "type": "number"
                },
                "total-unit": {
                    "type": "integer"
                }
            }
        },
        "cuspackagecommands.DateNursingMapping": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "nursing-id": {
                    "type": "string"
                }
            }
        },
        "cuspackagecommands.ReqCreatePackageTaskDTO": {
            "type": "object",
            "required": [
                "svcpackage-id"
            ],
            "properties": {
                "date-nurse-mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cuspackagecommands.DateNursingMapping"
                    }
                },
                "patient-address": {
                    "type": "string"
                },
                "patient-id": {
                    "type": "string"
                },
                "svcpackage-id": {
                    "type": "string"
                },
                "task-infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cuspackagecommands.CreateCustomizedTaskDTO"
                    }
                }
            }
        },
        "cuspackagecommands.UpdateMedicalRecordDTO": {
            "type": "object",
            "properties": {
                "nursing-report": {
                    "type": "string"
                },
                "staff-confirmation": {
                    "type": "string"
                }
            }
        },
        "invoicecommands.PayosWebhookData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "integer"
                        },
                        "code": {
                            "type": "string"
                        },
                        "counterAccountBankId": {
                            "type": "string"
                        },
                        "counterAccountBankName": {
                            "type": "string"
                        },
                        "counterAccountName": {
                            "type": "string"
                        },
                        "counterAccountNumber": {
                            "type": "string"
                        },
                        "currency": {
                            "type": "string"
                        },
                        "desc": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "orderCode": {
                            "type": "integer"
                        },
                        "paymentLinkId": {
                            "type": "string"
                        },
                        "reference": {
                            "type": "string"
                        },
                        "transactionDateTime": {
                            "type": "string"
                        },
                        "virtualAccountName": {
                            "type": "string"
                        },
                        "virtualAccountNumber": {
                            "type": "string"
                        }
                    }
                },
                "desc": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "invoicequeries.RequestGetInvoicesByPatientIds": {
            "type": "object",
            "properties": {
                "is-admin": {
                    "type": "boolean"
                },
                "patient-ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "servicecommands.CreateServiceDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "servicecommands.UpdateServiceDTO": {
            "type": "object",
            "properties": {
                "category-id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "svcpackagecommands.ServicePackageDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "combo-days": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "time-interval": {
                    "type": "integer"
                }
            }
        },
        "svcpackagecommands.ServiceTaskDTO": {
            "type": "object",
            "required": [
                "cost"
            ],
            "properties": {
                "additional-cost": {
                    "type": "number"
                },
                "additional-cost-desc": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "integer"
                },
                "is-must-have": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price-of-step": {
                    "type": "integer"
                },
                "staff-advice": {
                    "type": "string"
                },
                "task-order": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "quantity",
                        "time"
                    ]
                }
            }
        },
        "svcpackagecommands.ServiceTaskQueryDTO": {
            "type": "object",
            "properties": {
                "additional-cost": {
                    "type": "number"
                },
                "additional-cost-desc": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is-must-have": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price-of-step": {
                    "type": "integer"
                },
                "staff-advice": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "svcpackage-id": {
                    "type": "string"
                },
                "task-order": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "svcpackagecommands.UpdateServicePackageDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "combo-days": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "available",
                        "unavailable"
                    ]
                },
                "time-interval": {
                    "type": "integer"
                }
            }
        },
        "svcpackagecommands.UpdateServiceTaskDTO": {
            "type": "object",
            "required": [
                "additional-cost",
                "additional-cost-desc",
                "cost",
                "price-of-step"
            ],
            "properties": {
                "additional-cost": {
                    "type": "number"
                },
                "additional-cost-desc": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "est-duration": {
                    "type": "integer"
                },
                "is-must-have": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price-of-step": {
                    "type": "integer"
                },
                "staff-advice": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "available",
                        "unavailable"
                    ]
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "quantity",
                        "time"
                    ]
                }
            }
        },
        "svcpackagecommands.UpdateTaskOrderDTO": {
            "type": "object",
            "properties": {
                "svctasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/svcpackagecommands.ServiceTaskQueryDTO"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}