definitions:
  appointmentqueries.CheckNursesAvailabilityRequestDTO:
    properties:
      nurses-dates:
        items:
          $ref: '#/definitions/appointmentqueries.NurseDateMapping'
        type: array
    type: object
  appointmentqueries.NurseDateMapping:
    properties:
      est-duration:
        type: integer
      est-start-date:
        type: string
      nurse-id:
        type: string
    type: object
  categorycommands.CreateCategoryDTO:
    properties:
      description:
        type: string
      name:
        type: string
      thumbnail:
        type: string
    type: object
  cuspackagecommands.CreateCustomizedTaskDTO:
    properties:
      client-note:
        type: string
      est-duration:
        type: integer
      svctask-id:
        type: string
      total-cost:
        type: number
      total-unit:
        type: integer
    required:
    - svctask-id
    type: object
  cuspackagecommands.DateNursingMapping:
    properties:
      date:
        type: string
      nursing-id:
        type: string
    type: object
  cuspackagecommands.ReqCreatePackageTaskDTO:
    properties:
      date-nurse-mappings:
        items:
          $ref: '#/definitions/cuspackagecommands.DateNursingMapping'
        type: array
      patient-address:
        type: string
      patient-id:
        type: string
      svcpackage-id:
        type: string
      task-infos:
        items:
          $ref: '#/definitions/cuspackagecommands.CreateCustomizedTaskDTO'
        type: array
    required:
    - svcpackage-id
    type: object
  servicecommands.CreateServiceDTO:
    properties:
      description:
        type: string
      est-duration:
        type: string
      name:
        type: string
    type: object
  svcpackagecommands.ServicePackageDTO:
    properties:
      combo-days:
        type: integer
      description:
        type: string
      discount:
        type: integer
      name:
        type: string
      time-interval:
        type: integer
    required:
    - description
    - name
    type: object
  svcpackagecommands.ServiceTaskDTO:
    properties:
      additional-cost:
        type: number
      additional-cost-desc:
        type: string
      cost:
        type: number
      description:
        type: string
      est-duration:
        type: integer
      is-must-have:
        type: boolean
      name:
        type: string
      price-of-step:
        type: integer
      staff-advice:
        type: string
      task-order:
        type: integer
      unit:
        enum:
        - quantity
        - time
        type: string
    required:
    - cost
    type: object
  svcpackagecommands.ServiceTaskQueryDTO:
    properties:
      additional-cost:
        type: number
      additional-cost-desc:
        type: string
      cost:
        type: number
      description:
        type: string
      est-duration:
        type: integer
      id:
        type: string
      is-must-have:
        type: boolean
      name:
        type: string
      price-of-step:
        type: integer
      staff-advice:
        type: string
      status:
        type: string
      svcpackage-id:
        type: string
      task-order:
        type: integer
      unit:
        type: string
    type: object
  svcpackagecommands.UpdateServicePackageDTO:
    properties:
      combo-days:
        type: integer
      description:
        type: string
      discount:
        type: integer
      name:
        type: string
      status:
        enum:
        - available
        - unavailable
        type: string
      time-interval:
        type: integer
    required:
    - description
    - name
    type: object
  svcpackagecommands.UpdateServiceTaskDTO:
    properties:
      additional-cost:
        type: number
      additional-cost-desc:
        type: string
      cost:
        type: number
      description:
        type: string
      est-duration:
        type: integer
      is-must-have:
        type: boolean
      name:
        type: string
      price-of-step:
        type: integer
      staff-advice:
        type: string
      status:
        enum:
        - available
        - unavailable
        type: string
      unit:
        enum:
        - quantity
        - time
        type: string
    required:
    - additional-cost
    - additional-cost-desc
    - cost
    - price-of-step
    type: object
  svcpackagecommands.UpdateTaskOrderDTO:
    properties:
      svctasks:
        items:
          $ref: '#/definitions/svcpackagecommands.ServiceTaskQueryDTO'
        type: array
    type: object
info:
  contact: {}
  description: |-
    Auth-service: https://api.curanest.com.vn/auth/swagger/index.html.
    Patient-service: https://api.curanest.com.vn/patient/swagger/index.html.
    Nurse-service: https://api.curanest.com.vn/nurse/swagger/index.html.
    Appointment-service: https://api.curanest.com.vn/appointment/swagger/index.html.
    Notification-service (not ready - expected): https://api.curanest.com.vn/notification/swagger/index.html.
  title: Appointment Service
  version: "1.0"
paths:
  /api/v1/appointments:
    get:
      consumes:
      - application/json
      description: get appointment by filter option
      parameters:
      - description: service ID (UUID)
        in: query
        name: service-id
        type: string
      - description: customized package ID (UUID)
        in: query
        name: cuspackage-id
        type: string
      - description: nursing ID (UUID)
        in: query
        name: nursing-id
        type: string
      - description: patient ID (UUID)
        in: query
        name: patient-id
        type: string
      - description: had a nurse not not
        in: query
        name: had-nurse
        type: string
      - description: appointment status
        in: query
        name: appointment-status
        type: string
      - description: est date from (YYYY-MM-DD)
        in: query
        name: est-date-from
        type: string
      - description: est date to (YYYY-MM-DD)
        in: query
        name: est-date-to
        type: string
      - description: apply pagination not not
        in: query
        name: apply-paging
        type: string
      - description: current page index
        in: query
        name: page
        type: integer
      - description: number of items per page
        in: query
        name: page-size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get appointment by filter option
      tags:
      - appointments
  /api/v1/appointments/{appointment-id}/assign-nursing/{nursing-id}:
    patch:
      consumes:
      - application/json
      description: assign nursing for appointment (staff)
      parameters:
      - description: appointment ID (UUID)
        in: path
        name: appointment-id
        required: true
        type: string
      - description: nursing ID (UUID)
        in: path
        name: nursing-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: assign nursing for appointment (staff)
      tags:
      - appointments
  /api/v1/appointments/{appointment-id}/status:
    patch:
      consumes:
      - application/json
      description: get appointment by filter option
      parameters:
      - description: appointment ID (UUID)
        in: path
        name: appointment-id
        required: true
        type: string
      - description: new status to update appointment's status
        in: query
        name: new-status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get appointment by filter option
      tags:
      - appointments
  /api/v1/appointments/{appointment-id}/update-status-upcoming:
    patch:
      consumes:
      - application/json
      description: update status of appointment to upcoming
      parameters:
      - description: appointment ID (UUID)
        in: path
        name: appointment-id
        required: true
        type: string
      - description: origin code (current location of nursing - lat/lng
        in: query
        name: origin-code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update status of appointment to upcoming
      tags:
      - appointments
  /api/v1/appointments/nursing-available:
    get:
      consumes:
      - application/json
      description: get nursing available with service of appointment and date
      parameters:
      - description: service ID (UUID)
        in: query
        name: service-id
        required: true
        type: string
      - description: est date (YYYY-MM-DDTHH:MM:SSZ, e.g., 2025-05-16T01:00:00Z)
        in: query
        name: est-date
        required: true
        type: string
      - description: est duration
        in: query
        name: est-duration
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get nursing available
      tags:
      - appointments
  /api/v1/appointments/nursing-timesheet:
    get:
      consumes:
      - application/json
      description: get timesheet of nursing
      parameters:
      - description: nursing ID (UUID)
        in: query
        name: nursing-id
        type: string
      - description: est date from (YYYY-MM-DD)
        in: query
        name: est-date-from
        type: string
      - description: est date to (YYYY-MM-DD)
        in: query
        name: est-date-to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get timesheet of nursing
      tags:
      - appointments
  /api/v1/appointments/verify-nurses-dates:
    post:
      consumes:
      - application/json
      description: verify nurses and dates are ready for new appointment
      parameters:
      - description: nurses and dates mapping
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/appointmentqueries.CheckNursesAvailabilityRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: verify nurses and dates
      tags:
      - appointments
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: get categories by name
      parameters:
      - description: category name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: create new category
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/categorycommands.CreateCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new category
      tags:
      - categories
  /api/v1/categories/{category-id}/services:
    get:
      consumes:
      - application/json
      description: get list service by category-id (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      - description: services name
        in: query
        name: service-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get list service by category-id (admin)
      tags:
      - services
    post:
      consumes:
      - application/json
      description: create new service
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      - description: service creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/servicecommands.CreateServiceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new service
      tags:
      - services
  /api/v1/categories/{category-id}/staff/{staff-id}:
    patch:
      consumes:
      - application/json
      description: add staff to category (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      - description: staff ID (UUID)
        in: path
        name: staff-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: add staff to category (admin)
      tags:
      - categories
  /api/v1/categories/{category-id}/staff/remove:
    patch:
      consumes:
      - application/json
      description: remove staff to category (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: remove staff to category (admin)
      tags:
      - categories
  /api/v1/cuspackage:
    get:
      consumes:
      - application/json
      description: find customized-package & customized-tasks with Id and est-date
      parameters:
      - description: customized-package ID (UUID)
        in: query
        name: cus-package-id
        required: true
        type: string
      - description: est date (YYYY-MM-DD)
        in: query
        name: est-date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: find customized-package & customized-tasks with Id and est-date
      tags:
      - customized packages
    post:
      consumes:
      - application/json
      description: create customized service package (client)
      parameters:
      - description: customized package and task creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/cuspackagecommands.ReqCreatePackageTaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create customized service package (client)
      tags:
      - customized packages
  /api/v1/cuspackage/{cus-package-id}/invoices:
    get:
      consumes:
      - application/json
      description: find invoices with cus-package-id
      parameters:
      - description: customized-package ID (UUID)
        in: path
        name: cus-package-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: find invoices with cus-package-id
      tags:
      - invoices
  /api/v1/services/{service-id}/svcpackage:
    get:
      consumes:
      - application/json
      description: get list service-package by service-id
      parameters:
      - description: service ID (UUID)
        in: path
        name: service-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: get list service-package by service-id
      tags:
      - service packages
    post:
      consumes:
      - application/json
      description: create new service package (staff)
      parameters:
      - description: service ID (UUID)
        in: path
        name: service-id
        required: true
        type: string
      - description: service package creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/svcpackagecommands.ServicePackageDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new service package (staff)
      tags:
      - service packages
  /api/v1/services/{service-id}/svcpackage/{svcpackage-id}:
    put:
      consumes:
      - application/json
      description: update service package (staff)
      parameters:
      - description: service ID (UUID)
        in: path
        name: service-id
        required: true
        type: string
      - description: service-package ID (UUID)
        in: path
        name: svcpackage-id
        required: true
        type: string
      - description: service package update information
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/svcpackagecommands.UpdateServicePackageDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update service package (staff)
      tags:
      - service packages
  /api/v1/services/group-by-category:
    get:
      consumes:
      - application/json
      description: get list service with category (guest)
      parameters:
      - description: services name
        in: query
        name: service-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: get list service with category (guest)
      tags:
      - services
  /api/v1/staff/services:
    get:
      consumes:
      - application/json
      description: get list service of staff (staff)
      parameters:
      - description: services name
        in: query
        name: service-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get list service of staff (staff)
      tags:
      - services
  /api/v1/svcpackage/{svcpackage-id}/svctask:
    get:
      consumes:
      - application/json
      description: get list service-tasks by svcpackage-id
      parameters:
      - description: service package ID (UUID)
        in: path
        name: svcpackage-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: get list service-tasks by svcpackage-id
      tags:
      - service packages
    post:
      consumes:
      - application/json
      description: create new service task (staff)
      parameters:
      - description: category ID (UUID)
        in: path
        name: svcpackage-id
        required: true
        type: string
      - description: service task creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/svcpackagecommands.ServiceTaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new service task (staff)
      tags:
      - service packages
  /api/v1/svcpackage/{svcpackage-id}/svctask/{svctask-id}:
    put:
      consumes:
      - application/json
      description: update service task (staff)
      parameters:
      - description: category ID (UUID)
        in: path
        name: svcpackage-id
        required: true
        type: string
      - description: service-task ID (UUID)
        in: path
        name: svctask-id
        required: true
        type: string
      - description: service task update information
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/svcpackagecommands.UpdateServiceTaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update service task (staff)
      tags:
      - service packages
  /api/v1/svcpackage/svctask:
    patch:
      consumes:
      - application/json
      description: update service task order(staff)
      parameters:
      - description: service task update information
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/svcpackagecommands.UpdateTaskOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update service task order (staff)
      tags:
      - service packages
  /ping:
    get:
      consumes:
      - application/json
      description: ping server
      produces:
      - application/json
      responses:
        "200":
          description: message success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: ping server
      tags:
      - ping
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
