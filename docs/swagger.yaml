definitions:
  categorycommands.CreateCategoryDTO:
    properties:
      description:
        type: string
      name:
        type: string
      thumbnail:
        type: string
    type: object
  servicecommands.CreateServiceDTO:
    properties:
      category-id:
        type: string
      description:
        type: string
      est-duration:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: |-
    Auth-service: https://api.curanest.com.vn/auth/swagger/index.html.
    Patient-service: https://api.curanest.com.vn/patient/swagger/index.html.
    Nurse-service: https://api.curanest.com.vn/nurse/swagger/index.html.
    Appointment-service: https://api.curanest.com.vn/appointment/swagger/index.html.
    Notification-service (not ready - expected): https://api.curanest.com.vn/notification/swagger/index.html.
  title: Appointment Service
  version: "1.0"
paths:
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: get categories by name
      parameters:
      - description: category name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: create new category
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/categorycommands.CreateCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new category
      tags:
      - categories
  /api/v1/categories/{category-id}/services:
    get:
      consumes:
      - application/json
      description: get list service by category-id (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      - description: services name
        in: query
        name: service-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get list service by category-id (admin)
      tags:
      - services
  /api/v1/categories/{category-id}/staff/{staff-id}:
    patch:
      consumes:
      - application/json
      description: add staff to category (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      - description: staff ID (UUID)
        in: path
        name: staff-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: add staff to category (admin)
      tags:
      - categories
  /api/v1/categories/{category-id}/staff/remove:
    patch:
      consumes:
      - application/json
      description: remove staff to category (admin)
      parameters:
      - description: category ID (UUID)
        in: path
        name: category-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: remove staff to category (admin)
      tags:
      - categories
  /api/v1/services:
    post:
      consumes:
      - application/json
      description: create new service
      parameters:
      - description: service creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/servicecommands.CreateServiceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create new service
      tags:
      - services
  /api/v1/services/group-by-category:
    get:
      consumes:
      - application/json
      description: get list service with category (guest)
      parameters:
      - description: services name
        in: query
        name: service-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: get list service with category (guest)
      tags:
      - services
  /ping:
    get:
      consumes:
      - application/json
      description: ping server
      produces:
      - application/json
      responses:
        "200":
          description: message success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: ping server
      tags:
      - ping
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
